/**
 * @file effects.cpp
 *
 * Implementation of functions for loading and playing sounds.
 */
#include "effects.h"

#include "engine/random.hpp"
#include "init.h"
#include "player.h"
#include "../sound/sound.h"
#include "utils/stdcompat/algorithm.hpp"

#include "datatable.h"

namespace devilution {

int sfxdelay;
_sfx_id sfxdnum = SFX_NONE;


#define SFX_STRING_TO_ID(x) \
	if (str == #x) {        \
		return x;           \
	}
_sfx_id SfxIdFromString(std::string str)
{
	SFX_STRING_TO_ID(SFX_NONE)
	SFX_STRING_TO_ID(PS_WALK1)
	SFX_STRING_TO_ID(PS_WALK2)
	SFX_STRING_TO_ID(PS_WALK3)
	SFX_STRING_TO_ID(PS_WALK4)
	SFX_STRING_TO_ID(PS_BFIRE)
	SFX_STRING_TO_ID(PS_FMAG)
	SFX_STRING_TO_ID(PS_TMAG)
	SFX_STRING_TO_ID(PS_LGHIT)
	SFX_STRING_TO_ID(PS_LGHIT1)
	SFX_STRING_TO_ID(PS_SWING)
	SFX_STRING_TO_ID(PS_SWING2)
	SFX_STRING_TO_ID(PS_DEAD)
	SFX_STRING_TO_ID(IS_STING1)
	SFX_STRING_TO_ID(IS_FBALLBOW)
	SFX_STRING_TO_ID(IS_QUESTDN)
	SFX_STRING_TO_ID(IS_ARMRFKD)
	SFX_STRING_TO_ID(IS_BARLFIRE)
	SFX_STRING_TO_ID(IS_BARREL)
	SFX_STRING_TO_ID(IS_POPPOP8)
	SFX_STRING_TO_ID(IS_POPPOP5)
	SFX_STRING_TO_ID(IS_POPPOP3)
	SFX_STRING_TO_ID(IS_POPPOP2)
	SFX_STRING_TO_ID(IS_BHIT)
	SFX_STRING_TO_ID(IS_BHIT1)
	SFX_STRING_TO_ID(IS_CHEST)
	SFX_STRING_TO_ID(IS_DOORCLOS)
	SFX_STRING_TO_ID(IS_DOOROPEN)
	SFX_STRING_TO_ID(IS_FANVL)
	SFX_STRING_TO_ID(IS_FAXE)
	SFX_STRING_TO_ID(IS_FBLST)
	SFX_STRING_TO_ID(IS_FBODY)
	SFX_STRING_TO_ID(IS_FBOOK)
	SFX_STRING_TO_ID(IS_FBOW)
	SFX_STRING_TO_ID(IS_FCAP)
	SFX_STRING_TO_ID(IS_FHARM)
	SFX_STRING_TO_ID(IS_FLARM)
	SFX_STRING_TO_ID(IS_FMAG)
	SFX_STRING_TO_ID(IS_FMAG1)
	SFX_STRING_TO_ID(IS_FMUSH)
	SFX_STRING_TO_ID(IS_FPOT)
	SFX_STRING_TO_ID(IS_FRING)
	SFX_STRING_TO_ID(IS_FROCK)
	SFX_STRING_TO_ID(IS_FSCRL)
	SFX_STRING_TO_ID(IS_FSHLD)
	SFX_STRING_TO_ID(IS_FSIGN)
	SFX_STRING_TO_ID(IS_FSTAF)
	SFX_STRING_TO_ID(IS_FSWOR)
	SFX_STRING_TO_ID(IS_GOLD)
	SFX_STRING_TO_ID(IS_HLMTFKD)
	SFX_STRING_TO_ID(IS_IANVL)
	SFX_STRING_TO_ID(IS_IAXE)
	SFX_STRING_TO_ID(IS_IBLST)
	SFX_STRING_TO_ID(IS_IBODY)
	SFX_STRING_TO_ID(IS_IBOOK)
	SFX_STRING_TO_ID(IS_IBOW)
	SFX_STRING_TO_ID(IS_ICAP)
	SFX_STRING_TO_ID(IS_IGRAB)
	SFX_STRING_TO_ID(IS_IHARM)
	SFX_STRING_TO_ID(IS_ILARM)
	SFX_STRING_TO_ID(IS_IMUSH)
	SFX_STRING_TO_ID(IS_IPOT)
	SFX_STRING_TO_ID(IS_IRING)
	SFX_STRING_TO_ID(IS_IROCK)
	SFX_STRING_TO_ID(IS_ISCROL)
	SFX_STRING_TO_ID(IS_ISHIEL)
	SFX_STRING_TO_ID(IS_ISIGN)
	SFX_STRING_TO_ID(IS_ISTAF)
	SFX_STRING_TO_ID(IS_ISWORD)
	SFX_STRING_TO_ID(IS_LEVER)
	SFX_STRING_TO_ID(IS_MAGIC)
	SFX_STRING_TO_ID(IS_MAGIC1)
	SFX_STRING_TO_ID(IS_RBOOK)
	SFX_STRING_TO_ID(IS_SARC)
	SFX_STRING_TO_ID(IS_SHLDFKD)
	SFX_STRING_TO_ID(IS_SWRDFKD)
	SFX_STRING_TO_ID(IS_TITLEMOV)
	SFX_STRING_TO_ID(IS_TITLSLCT)
	SFX_STRING_TO_ID(SFX_SILENCE)
	SFX_STRING_TO_ID(IS_TRAP)
	SFX_STRING_TO_ID(IS_CAST1)
	SFX_STRING_TO_ID(IS_CAST10)
	SFX_STRING_TO_ID(IS_CAST12)
	SFX_STRING_TO_ID(IS_CAST2)
	SFX_STRING_TO_ID(IS_CAST3)
	SFX_STRING_TO_ID(IS_CAST4)
	SFX_STRING_TO_ID(IS_CAST5)
	SFX_STRING_TO_ID(IS_CAST6)
	SFX_STRING_TO_ID(IS_CAST7)
	SFX_STRING_TO_ID(IS_CAST8)
	SFX_STRING_TO_ID(IS_CAST9)
	SFX_STRING_TO_ID(LS_HEALING)
	SFX_STRING_TO_ID(IS_REPAIR)
	SFX_STRING_TO_ID(LS_ACID)
	SFX_STRING_TO_ID(LS_ACIDS)
	SFX_STRING_TO_ID(LS_APOC)
	SFX_STRING_TO_ID(LS_ARROWALL)
	SFX_STRING_TO_ID(LS_BLODBOIL)
	SFX_STRING_TO_ID(LS_BLODSTAR)
	SFX_STRING_TO_ID(LS_BLSIMPT)
	SFX_STRING_TO_ID(LS_BONESP)
	SFX_STRING_TO_ID(LS_BSIMPCT)
	SFX_STRING_TO_ID(LS_CALDRON)
	SFX_STRING_TO_ID(LS_CBOLT)
	SFX_STRING_TO_ID(LS_CHLTNING)
	SFX_STRING_TO_ID(LS_DSERP)
	SFX_STRING_TO_ID(LS_ELECIMP1)
	SFX_STRING_TO_ID(LS_ELEMENTL)
	SFX_STRING_TO_ID(LS_ETHEREAL)
	SFX_STRING_TO_ID(LS_FBALL)
	SFX_STRING_TO_ID(LS_FBOLT1)
	SFX_STRING_TO_ID(LS_FBOLT2)
	SFX_STRING_TO_ID(LS_FIRIMP1)
	SFX_STRING_TO_ID(LS_FIRIMP2)
	SFX_STRING_TO_ID(LS_FLAMWAVE)
	SFX_STRING_TO_ID(LS_FLASH)
	SFX_STRING_TO_ID(LS_FOUNTAIN)
	SFX_STRING_TO_ID(LS_GOLUM)
	SFX_STRING_TO_ID(LS_GOLUMDED)
	SFX_STRING_TO_ID(LS_GSHRINE)
	SFX_STRING_TO_ID(LS_GUARD)
	SFX_STRING_TO_ID(LS_GUARDLAN)
	SFX_STRING_TO_ID(LS_HOLYBOLT)
	SFX_STRING_TO_ID(LS_HYPER)
	SFX_STRING_TO_ID(LS_INFRAVIS)
	SFX_STRING_TO_ID(LS_INVISIBL)
	SFX_STRING_TO_ID(LS_INVPOT)
	SFX_STRING_TO_ID(LS_LNING1)
	SFX_STRING_TO_ID(LS_LTNING)
	SFX_STRING_TO_ID(LS_MSHIELD)
	SFX_STRING_TO_ID(LS_NESTXPLD)
	SFX_STRING_TO_ID(LS_NOVA)
	SFX_STRING_TO_ID(LS_PORTAL)
	SFX_STRING_TO_ID(LS_PUDDLE)
	SFX_STRING_TO_ID(LS_RESUR)
	SFX_STRING_TO_ID(LS_SCURSE)
	SFX_STRING_TO_ID(LS_SCURIMP)
	SFX_STRING_TO_ID(LS_SENTINEL)
	SFX_STRING_TO_ID(LS_SHATTER)
	SFX_STRING_TO_ID(LS_SOULFIRE)
	SFX_STRING_TO_ID(LS_SPOUTLOP)
	SFX_STRING_TO_ID(LS_SPOUTSTR)
	SFX_STRING_TO_ID(LS_STORM)
	SFX_STRING_TO_ID(LS_TRAPDIS)
	SFX_STRING_TO_ID(LS_TELEPORT)
	SFX_STRING_TO_ID(LS_VTHEFT)
	SFX_STRING_TO_ID(LS_WALLLOOP)
	SFX_STRING_TO_ID(LS_WALLSTRT)
	SFX_STRING_TO_ID(LS_LMAG)
	SFX_STRING_TO_ID(TSFX_BMAID1)
	SFX_STRING_TO_ID(TSFX_BMAID2)
	SFX_STRING_TO_ID(TSFX_BMAID3)
	SFX_STRING_TO_ID(TSFX_BMAID4)
	SFX_STRING_TO_ID(TSFX_BMAID5)
	SFX_STRING_TO_ID(TSFX_BMAID6)
	SFX_STRING_TO_ID(TSFX_BMAID7)
	SFX_STRING_TO_ID(TSFX_BMAID8)
	SFX_STRING_TO_ID(TSFX_BMAID9)
	SFX_STRING_TO_ID(TSFX_BMAID10)
	SFX_STRING_TO_ID(TSFX_BMAID11)
	SFX_STRING_TO_ID(TSFX_BMAID12)
	SFX_STRING_TO_ID(TSFX_BMAID13)
	SFX_STRING_TO_ID(TSFX_BMAID14)
	SFX_STRING_TO_ID(TSFX_BMAID15)
	SFX_STRING_TO_ID(TSFX_BMAID16)
	SFX_STRING_TO_ID(TSFX_BMAID17)
	SFX_STRING_TO_ID(TSFX_BMAID18)
	SFX_STRING_TO_ID(TSFX_BMAID19)
	SFX_STRING_TO_ID(TSFX_BMAID20)
	SFX_STRING_TO_ID(TSFX_BMAID21)
	SFX_STRING_TO_ID(TSFX_BMAID22)
	SFX_STRING_TO_ID(TSFX_BMAID23)
	SFX_STRING_TO_ID(TSFX_BMAID24)
	SFX_STRING_TO_ID(TSFX_BMAID25)
	SFX_STRING_TO_ID(TSFX_BMAID26)
	SFX_STRING_TO_ID(TSFX_BMAID27)
	SFX_STRING_TO_ID(TSFX_BMAID28)
	SFX_STRING_TO_ID(TSFX_BMAID29)
	SFX_STRING_TO_ID(TSFX_BMAID30)
	SFX_STRING_TO_ID(TSFX_BMAID31)
	SFX_STRING_TO_ID(TSFX_BMAID32)
	SFX_STRING_TO_ID(TSFX_BMAID33)
	SFX_STRING_TO_ID(TSFX_BMAID34)
	SFX_STRING_TO_ID(TSFX_BMAID35)
	SFX_STRING_TO_ID(TSFX_BMAID36)
	SFX_STRING_TO_ID(TSFX_BMAID37)
	SFX_STRING_TO_ID(TSFX_BMAID38)
	SFX_STRING_TO_ID(TSFX_BMAID39)
	SFX_STRING_TO_ID(TSFX_BMAID40)
	SFX_STRING_TO_ID(TSFX_SMITH1)
	SFX_STRING_TO_ID(TSFX_SMITH2)
	SFX_STRING_TO_ID(TSFX_SMITH3)
	SFX_STRING_TO_ID(TSFX_SMITH4)
	SFX_STRING_TO_ID(TSFX_SMITH5)
	SFX_STRING_TO_ID(TSFX_SMITH6)
	SFX_STRING_TO_ID(TSFX_SMITH7)
	SFX_STRING_TO_ID(TSFX_SMITH8)
	SFX_STRING_TO_ID(TSFX_SMITH9)
	SFX_STRING_TO_ID(TSFX_SMITH10)
	SFX_STRING_TO_ID(TSFX_SMITH11)
	SFX_STRING_TO_ID(TSFX_SMITH12)
	SFX_STRING_TO_ID(TSFX_SMITH13)
	SFX_STRING_TO_ID(TSFX_SMITH14)
	SFX_STRING_TO_ID(TSFX_SMITH15)
	SFX_STRING_TO_ID(TSFX_SMITH16)
	SFX_STRING_TO_ID(TSFX_SMITH17)
	SFX_STRING_TO_ID(TSFX_SMITH18)
	SFX_STRING_TO_ID(TSFX_SMITH19)
	SFX_STRING_TO_ID(TSFX_SMITH20)
	SFX_STRING_TO_ID(TSFX_SMITH21)
	SFX_STRING_TO_ID(TSFX_SMITH22)
	SFX_STRING_TO_ID(TSFX_SMITH23)
	SFX_STRING_TO_ID(TSFX_SMITH24)
	SFX_STRING_TO_ID(TSFX_SMITH25)
	SFX_STRING_TO_ID(TSFX_SMITH26)
	SFX_STRING_TO_ID(TSFX_SMITH27)
	SFX_STRING_TO_ID(TSFX_SMITH28)
	SFX_STRING_TO_ID(TSFX_SMITH29)
	SFX_STRING_TO_ID(TSFX_SMITH30)
	SFX_STRING_TO_ID(TSFX_SMITH31)
	SFX_STRING_TO_ID(TSFX_SMITH32)
	SFX_STRING_TO_ID(TSFX_SMITH33)
	SFX_STRING_TO_ID(TSFX_SMITH34)
	SFX_STRING_TO_ID(TSFX_SMITH35)
	SFX_STRING_TO_ID(TSFX_SMITH36)
	SFX_STRING_TO_ID(TSFX_SMITH37)
	SFX_STRING_TO_ID(TSFX_SMITH38)
	SFX_STRING_TO_ID(TSFX_SMITH39)
	SFX_STRING_TO_ID(TSFX_SMITH40)
	SFX_STRING_TO_ID(TSFX_SMITH41)
	SFX_STRING_TO_ID(TSFX_SMITH42)
	SFX_STRING_TO_ID(TSFX_SMITH43)
	SFX_STRING_TO_ID(TSFX_SMITH44)
	SFX_STRING_TO_ID(TSFX_SMITH45)
	SFX_STRING_TO_ID(TSFX_SMITH46)
	SFX_STRING_TO_ID(TSFX_SMITH47)
	SFX_STRING_TO_ID(TSFX_SMITH48)
	SFX_STRING_TO_ID(TSFX_SMITH49)
	SFX_STRING_TO_ID(TSFX_SMITH50)
	SFX_STRING_TO_ID(TSFX_SMITH51)
	SFX_STRING_TO_ID(TSFX_SMITH52)
	SFX_STRING_TO_ID(TSFX_SMITH53)
	SFX_STRING_TO_ID(TSFX_SMITH54)
	SFX_STRING_TO_ID(TSFX_SMITH55)
	SFX_STRING_TO_ID(TSFX_SMITH56)
	SFX_STRING_TO_ID(TSFX_COW1)
	SFX_STRING_TO_ID(TSFX_COW2)
	SFX_STRING_TO_ID(TSFX_COW7)
	SFX_STRING_TO_ID(TSFX_COW8)
	SFX_STRING_TO_ID(TSFX_DEADGUY)
	SFX_STRING_TO_ID(TSFX_DRUNK1)
	SFX_STRING_TO_ID(TSFX_DRUNK2)
	SFX_STRING_TO_ID(TSFX_DRUNK3)
	SFX_STRING_TO_ID(TSFX_DRUNK4)
	SFX_STRING_TO_ID(TSFX_DRUNK5)
	SFX_STRING_TO_ID(TSFX_DRUNK6)
	SFX_STRING_TO_ID(TSFX_DRUNK7)
	SFX_STRING_TO_ID(TSFX_DRUNK8)
	SFX_STRING_TO_ID(TSFX_DRUNK9)
	SFX_STRING_TO_ID(TSFX_DRUNK10)
	SFX_STRING_TO_ID(TSFX_DRUNK11)
	SFX_STRING_TO_ID(TSFX_DRUNK12)
	SFX_STRING_TO_ID(TSFX_DRUNK13)
	SFX_STRING_TO_ID(TSFX_DRUNK14)
	SFX_STRING_TO_ID(TSFX_DRUNK15)
	SFX_STRING_TO_ID(TSFX_DRUNK16)
	SFX_STRING_TO_ID(TSFX_DRUNK17)
	SFX_STRING_TO_ID(TSFX_DRUNK18)
	SFX_STRING_TO_ID(TSFX_DRUNK19)
	SFX_STRING_TO_ID(TSFX_DRUNK20)
	SFX_STRING_TO_ID(TSFX_DRUNK21)
	SFX_STRING_TO_ID(TSFX_DRUNK22)
	SFX_STRING_TO_ID(TSFX_DRUNK23)
	SFX_STRING_TO_ID(TSFX_DRUNK24)
	SFX_STRING_TO_ID(TSFX_DRUNK25)
	SFX_STRING_TO_ID(TSFX_DRUNK26)
	SFX_STRING_TO_ID(TSFX_DRUNK27)
	SFX_STRING_TO_ID(TSFX_DRUNK28)
	SFX_STRING_TO_ID(TSFX_DRUNK29)
	SFX_STRING_TO_ID(TSFX_DRUNK30)
	SFX_STRING_TO_ID(TSFX_DRUNK31)
	SFX_STRING_TO_ID(TSFX_DRUNK32)
	SFX_STRING_TO_ID(TSFX_DRUNK33)
	SFX_STRING_TO_ID(TSFX_DRUNK34)
	SFX_STRING_TO_ID(TSFX_DRUNK35)
	SFX_STRING_TO_ID(TSFX_HEALER1)
	SFX_STRING_TO_ID(TSFX_HEALER2)
	SFX_STRING_TO_ID(TSFX_HEALER3)
	SFX_STRING_TO_ID(TSFX_HEALER4)
	SFX_STRING_TO_ID(TSFX_HEALER5)
	SFX_STRING_TO_ID(TSFX_HEALER6)
	SFX_STRING_TO_ID(TSFX_HEALER7)
	SFX_STRING_TO_ID(TSFX_HEALER8)
	SFX_STRING_TO_ID(TSFX_HEALER9)
	SFX_STRING_TO_ID(TSFX_HEALER10)
	SFX_STRING_TO_ID(TSFX_HEALER11)
	SFX_STRING_TO_ID(TSFX_HEALER12)
	SFX_STRING_TO_ID(TSFX_HEALER13)
	SFX_STRING_TO_ID(TSFX_HEALER14)
	SFX_STRING_TO_ID(TSFX_HEALER15)
	SFX_STRING_TO_ID(TSFX_HEALER16)
	SFX_STRING_TO_ID(TSFX_HEALER17)
	SFX_STRING_TO_ID(TSFX_HEALER18)
	SFX_STRING_TO_ID(TSFX_HEALER19)
	SFX_STRING_TO_ID(TSFX_HEALER20)
	SFX_STRING_TO_ID(TSFX_HEALER21)
	SFX_STRING_TO_ID(TSFX_HEALER22)
	SFX_STRING_TO_ID(TSFX_HEALER23)
	SFX_STRING_TO_ID(TSFX_HEALER24)
	SFX_STRING_TO_ID(TSFX_HEALER25)
	SFX_STRING_TO_ID(TSFX_HEALER26)
	SFX_STRING_TO_ID(TSFX_HEALER27)
	SFX_STRING_TO_ID(TSFX_HEALER28)
	SFX_STRING_TO_ID(TSFX_HEALER29)
	SFX_STRING_TO_ID(TSFX_HEALER30)
	SFX_STRING_TO_ID(TSFX_HEALER31)
	SFX_STRING_TO_ID(TSFX_HEALER32)
	SFX_STRING_TO_ID(TSFX_HEALER33)
	SFX_STRING_TO_ID(TSFX_HEALER34)
	SFX_STRING_TO_ID(TSFX_HEALER35)
	SFX_STRING_TO_ID(TSFX_HEALER36)
	SFX_STRING_TO_ID(TSFX_HEALER37)
	SFX_STRING_TO_ID(TSFX_HEALER38)
	SFX_STRING_TO_ID(TSFX_HEALER39)
	SFX_STRING_TO_ID(TSFX_HEALER40)
	SFX_STRING_TO_ID(TSFX_HEALER41)
	SFX_STRING_TO_ID(TSFX_HEALER42)
	SFX_STRING_TO_ID(TSFX_HEALER43)
	SFX_STRING_TO_ID(TSFX_HEALER44)
	SFX_STRING_TO_ID(TSFX_HEALER45)
	SFX_STRING_TO_ID(TSFX_HEALER46)
	SFX_STRING_TO_ID(TSFX_HEALER47)
	SFX_STRING_TO_ID(TSFX_PEGBOY1)
	SFX_STRING_TO_ID(TSFX_PEGBOY2)
	SFX_STRING_TO_ID(TSFX_PEGBOY3)
	SFX_STRING_TO_ID(TSFX_PEGBOY4)
	SFX_STRING_TO_ID(TSFX_PEGBOY5)
	SFX_STRING_TO_ID(TSFX_PEGBOY6)
	SFX_STRING_TO_ID(TSFX_PEGBOY7)
	SFX_STRING_TO_ID(TSFX_PEGBOY8)
	SFX_STRING_TO_ID(TSFX_PEGBOY9)
	SFX_STRING_TO_ID(TSFX_PEGBOY10)
	SFX_STRING_TO_ID(TSFX_PEGBOY11)
	SFX_STRING_TO_ID(TSFX_PEGBOY12)
	SFX_STRING_TO_ID(TSFX_PEGBOY13)
	SFX_STRING_TO_ID(TSFX_PEGBOY14)
	SFX_STRING_TO_ID(TSFX_PEGBOY15)
	SFX_STRING_TO_ID(TSFX_PEGBOY16)
	SFX_STRING_TO_ID(TSFX_PEGBOY17)
	SFX_STRING_TO_ID(TSFX_PEGBOY18)
	SFX_STRING_TO_ID(TSFX_PEGBOY19)
	SFX_STRING_TO_ID(TSFX_PEGBOY20)
	SFX_STRING_TO_ID(TSFX_PEGBOY21)
	SFX_STRING_TO_ID(TSFX_PEGBOY22)
	SFX_STRING_TO_ID(TSFX_PEGBOY23)
	SFX_STRING_TO_ID(TSFX_PEGBOY24)
	SFX_STRING_TO_ID(TSFX_PEGBOY25)
	SFX_STRING_TO_ID(TSFX_PEGBOY26)
	SFX_STRING_TO_ID(TSFX_PEGBOY27)
	SFX_STRING_TO_ID(TSFX_PEGBOY28)
	SFX_STRING_TO_ID(TSFX_PEGBOY29)
	SFX_STRING_TO_ID(TSFX_PEGBOY30)
	SFX_STRING_TO_ID(TSFX_PEGBOY31)
	SFX_STRING_TO_ID(TSFX_PEGBOY32)
	SFX_STRING_TO_ID(TSFX_PEGBOY33)
	SFX_STRING_TO_ID(TSFX_PEGBOY34)
	SFX_STRING_TO_ID(TSFX_PEGBOY35)
	SFX_STRING_TO_ID(TSFX_PEGBOY36)
	SFX_STRING_TO_ID(TSFX_PEGBOY37)
	SFX_STRING_TO_ID(TSFX_PEGBOY38)
	SFX_STRING_TO_ID(TSFX_PEGBOY39)
	SFX_STRING_TO_ID(TSFX_PEGBOY40)
	SFX_STRING_TO_ID(TSFX_PEGBOY41)
	SFX_STRING_TO_ID(TSFX_PEGBOY42)
	SFX_STRING_TO_ID(TSFX_PEGBOY43)
	SFX_STRING_TO_ID(TSFX_PRIEST0)
	SFX_STRING_TO_ID(TSFX_PRIEST1)
	SFX_STRING_TO_ID(TSFX_PRIEST2)
	SFX_STRING_TO_ID(TSFX_PRIEST3)
	SFX_STRING_TO_ID(TSFX_PRIEST4)
	SFX_STRING_TO_ID(TSFX_PRIEST5)
	SFX_STRING_TO_ID(TSFX_PRIEST6)
	SFX_STRING_TO_ID(TSFX_PRIEST7)
	SFX_STRING_TO_ID(TSFX_STORY0)
	SFX_STRING_TO_ID(TSFX_STORY1)
	SFX_STRING_TO_ID(TSFX_STORY2)
	SFX_STRING_TO_ID(TSFX_STORY3)
	SFX_STRING_TO_ID(TSFX_STORY4)
	SFX_STRING_TO_ID(TSFX_STORY5)
	SFX_STRING_TO_ID(TSFX_STORY6)
	SFX_STRING_TO_ID(TSFX_STORY7)
	SFX_STRING_TO_ID(TSFX_STORY8)
	SFX_STRING_TO_ID(TSFX_STORY9)
	SFX_STRING_TO_ID(TSFX_STORY10)
	SFX_STRING_TO_ID(TSFX_STORY11)
	SFX_STRING_TO_ID(TSFX_STORY12)
	SFX_STRING_TO_ID(TSFX_STORY13)
	SFX_STRING_TO_ID(TSFX_STORY14)
	SFX_STRING_TO_ID(TSFX_STORY15)
	SFX_STRING_TO_ID(TSFX_STORY16)
	SFX_STRING_TO_ID(TSFX_STORY17)
	SFX_STRING_TO_ID(TSFX_STORY18)
	SFX_STRING_TO_ID(TSFX_STORY19)
	SFX_STRING_TO_ID(TSFX_STORY20)
	SFX_STRING_TO_ID(TSFX_STORY21)
	SFX_STRING_TO_ID(TSFX_STORY22)
	SFX_STRING_TO_ID(TSFX_STORY23)
	SFX_STRING_TO_ID(TSFX_STORY24)
	SFX_STRING_TO_ID(TSFX_STORY25)
	SFX_STRING_TO_ID(TSFX_STORY26)
	SFX_STRING_TO_ID(TSFX_STORY27)
	SFX_STRING_TO_ID(TSFX_STORY28)
	SFX_STRING_TO_ID(TSFX_STORY29)
	SFX_STRING_TO_ID(TSFX_STORY30)
	SFX_STRING_TO_ID(TSFX_STORY31)
	SFX_STRING_TO_ID(TSFX_STORY32)
	SFX_STRING_TO_ID(TSFX_STORY33)
	SFX_STRING_TO_ID(TSFX_STORY34)
	SFX_STRING_TO_ID(TSFX_STORY35)
	SFX_STRING_TO_ID(TSFX_STORY36)
	SFX_STRING_TO_ID(TSFX_STORY37)
	SFX_STRING_TO_ID(TSFX_STORY38)
	SFX_STRING_TO_ID(TSFX_TAVERN0)
	SFX_STRING_TO_ID(TSFX_TAVERN1)
	SFX_STRING_TO_ID(TSFX_TAVERN2)
	SFX_STRING_TO_ID(TSFX_TAVERN3)
	SFX_STRING_TO_ID(TSFX_TAVERN4)
	SFX_STRING_TO_ID(TSFX_TAVERN5)
	SFX_STRING_TO_ID(TSFX_TAVERN6)
	SFX_STRING_TO_ID(TSFX_TAVERN7)
	SFX_STRING_TO_ID(TSFX_TAVERN8)
	SFX_STRING_TO_ID(TSFX_TAVERN9)
	SFX_STRING_TO_ID(TSFX_TAVERN10)
	SFX_STRING_TO_ID(TSFX_TAVERN11)
	SFX_STRING_TO_ID(TSFX_TAVERN12)
	SFX_STRING_TO_ID(TSFX_TAVERN13)
	SFX_STRING_TO_ID(TSFX_TAVERN14)
	SFX_STRING_TO_ID(TSFX_TAVERN15)
	SFX_STRING_TO_ID(TSFX_TAVERN16)
	SFX_STRING_TO_ID(TSFX_TAVERN17)
	SFX_STRING_TO_ID(TSFX_TAVERN18)
	SFX_STRING_TO_ID(TSFX_TAVERN19)
	SFX_STRING_TO_ID(TSFX_TAVERN20)
	SFX_STRING_TO_ID(TSFX_TAVERN21)
	SFX_STRING_TO_ID(TSFX_TAVERN22)
	SFX_STRING_TO_ID(TSFX_TAVERN23)
	SFX_STRING_TO_ID(TSFX_TAVERN24)
	SFX_STRING_TO_ID(TSFX_TAVERN25)
	SFX_STRING_TO_ID(TSFX_TAVERN26)
	SFX_STRING_TO_ID(TSFX_TAVERN27)
	SFX_STRING_TO_ID(TSFX_TAVERN28)
	SFX_STRING_TO_ID(TSFX_TAVERN29)
	SFX_STRING_TO_ID(TSFX_TAVERN30)
	SFX_STRING_TO_ID(TSFX_TAVERN31)
	SFX_STRING_TO_ID(TSFX_TAVERN32)
	SFX_STRING_TO_ID(TSFX_TAVERN33)
	SFX_STRING_TO_ID(TSFX_TAVERN34)
	SFX_STRING_TO_ID(TSFX_TAVERN35)
	SFX_STRING_TO_ID(TSFX_TAVERN36)
	SFX_STRING_TO_ID(TSFX_TAVERN37)
	SFX_STRING_TO_ID(TSFX_TAVERN38)
	SFX_STRING_TO_ID(TSFX_TAVERN39)
	SFX_STRING_TO_ID(TSFX_TAVERN40)
	SFX_STRING_TO_ID(TSFX_TAVERN41)
	SFX_STRING_TO_ID(TSFX_TAVERN42)
	SFX_STRING_TO_ID(TSFX_TAVERN43)
	SFX_STRING_TO_ID(TSFX_TAVERN44)
	SFX_STRING_TO_ID(TSFX_TAVERN45)
	SFX_STRING_TO_ID(TSFX_WITCH1)
	SFX_STRING_TO_ID(TSFX_WITCH2)
	SFX_STRING_TO_ID(TSFX_WITCH3)
	SFX_STRING_TO_ID(TSFX_WITCH4)
	SFX_STRING_TO_ID(TSFX_WITCH5)
	SFX_STRING_TO_ID(TSFX_WITCH6)
	SFX_STRING_TO_ID(TSFX_WITCH7)
	SFX_STRING_TO_ID(TSFX_WITCH8)
	SFX_STRING_TO_ID(TSFX_WITCH9)
	SFX_STRING_TO_ID(TSFX_WITCH10)
	SFX_STRING_TO_ID(TSFX_WITCH11)
	SFX_STRING_TO_ID(TSFX_WITCH12)
	SFX_STRING_TO_ID(TSFX_WITCH13)
	SFX_STRING_TO_ID(TSFX_WITCH14)
	SFX_STRING_TO_ID(TSFX_WITCH15)
	SFX_STRING_TO_ID(TSFX_WITCH16)
	SFX_STRING_TO_ID(TSFX_WITCH17)
	SFX_STRING_TO_ID(TSFX_WITCH18)
	SFX_STRING_TO_ID(TSFX_WITCH19)
	SFX_STRING_TO_ID(TSFX_WITCH20)
	SFX_STRING_TO_ID(TSFX_WITCH21)
	SFX_STRING_TO_ID(TSFX_WITCH22)
	SFX_STRING_TO_ID(TSFX_WITCH23)
	SFX_STRING_TO_ID(TSFX_WITCH24)
	SFX_STRING_TO_ID(TSFX_WITCH25)
	SFX_STRING_TO_ID(TSFX_WITCH26)
	SFX_STRING_TO_ID(TSFX_WITCH27)
	SFX_STRING_TO_ID(TSFX_WITCH28)
	SFX_STRING_TO_ID(TSFX_WITCH29)
	SFX_STRING_TO_ID(TSFX_WITCH30)
	SFX_STRING_TO_ID(TSFX_WITCH31)
	SFX_STRING_TO_ID(TSFX_WITCH32)
	SFX_STRING_TO_ID(TSFX_WITCH33)
	SFX_STRING_TO_ID(TSFX_WITCH34)
	SFX_STRING_TO_ID(TSFX_WITCH35)
	SFX_STRING_TO_ID(TSFX_WITCH36)
	SFX_STRING_TO_ID(TSFX_WITCH37)
	SFX_STRING_TO_ID(TSFX_WITCH38)
	SFX_STRING_TO_ID(TSFX_WITCH39)
	SFX_STRING_TO_ID(TSFX_WITCH40)
	SFX_STRING_TO_ID(TSFX_WITCH41)
	SFX_STRING_TO_ID(TSFX_WITCH42)
	SFX_STRING_TO_ID(TSFX_WITCH43)
	SFX_STRING_TO_ID(TSFX_WITCH44)
	SFX_STRING_TO_ID(TSFX_WITCH45)
	SFX_STRING_TO_ID(TSFX_WITCH46)
	SFX_STRING_TO_ID(TSFX_WITCH47)
	SFX_STRING_TO_ID(TSFX_WITCH48)
	SFX_STRING_TO_ID(TSFX_WITCH49)
	SFX_STRING_TO_ID(TSFX_WITCH50)
	SFX_STRING_TO_ID(TSFX_WOUND)
	SFX_STRING_TO_ID(PS_MAGE1)
	SFX_STRING_TO_ID(PS_MAGE2)
	SFX_STRING_TO_ID(PS_MAGE3)
	SFX_STRING_TO_ID(PS_MAGE4)
	SFX_STRING_TO_ID(PS_MAGE5)
	SFX_STRING_TO_ID(PS_MAGE6)
	SFX_STRING_TO_ID(PS_MAGE7)
	SFX_STRING_TO_ID(PS_MAGE8)
	SFX_STRING_TO_ID(PS_MAGE9)
	SFX_STRING_TO_ID(PS_MAGE10)
	SFX_STRING_TO_ID(PS_MAGE11)
	SFX_STRING_TO_ID(PS_MAGE12)
	SFX_STRING_TO_ID(PS_MAGE13)
	SFX_STRING_TO_ID(PS_MAGE14)
	SFX_STRING_TO_ID(PS_MAGE15)
	SFX_STRING_TO_ID(PS_MAGE16)
	SFX_STRING_TO_ID(PS_MAGE17)
	SFX_STRING_TO_ID(PS_MAGE18)
	SFX_STRING_TO_ID(PS_MAGE19)
	SFX_STRING_TO_ID(PS_MAGE20)
	SFX_STRING_TO_ID(PS_MAGE21)
	SFX_STRING_TO_ID(PS_MAGE22)
	SFX_STRING_TO_ID(PS_MAGE23)
	SFX_STRING_TO_ID(PS_MAGE24)
	SFX_STRING_TO_ID(PS_MAGE25)
	SFX_STRING_TO_ID(PS_MAGE26)
	SFX_STRING_TO_ID(PS_MAGE27)
	SFX_STRING_TO_ID(PS_MAGE28)
	SFX_STRING_TO_ID(PS_MAGE29)
	SFX_STRING_TO_ID(PS_MAGE30)
	SFX_STRING_TO_ID(PS_MAGE31)
	SFX_STRING_TO_ID(PS_MAGE32)
	SFX_STRING_TO_ID(PS_MAGE33)
	SFX_STRING_TO_ID(PS_MAGE34)
	SFX_STRING_TO_ID(PS_MAGE35)
	SFX_STRING_TO_ID(PS_MAGE36)
	SFX_STRING_TO_ID(PS_MAGE37)
	SFX_STRING_TO_ID(PS_MAGE38)
	SFX_STRING_TO_ID(PS_MAGE39)
	SFX_STRING_TO_ID(PS_MAGE40)
	SFX_STRING_TO_ID(PS_MAGE41)
	SFX_STRING_TO_ID(PS_MAGE42)
	SFX_STRING_TO_ID(PS_MAGE43)
	SFX_STRING_TO_ID(PS_MAGE44)
	SFX_STRING_TO_ID(PS_MAGE45)
	SFX_STRING_TO_ID(PS_MAGE46)
	SFX_STRING_TO_ID(PS_MAGE47)
	SFX_STRING_TO_ID(PS_MAGE48)
	SFX_STRING_TO_ID(PS_MAGE49)
	SFX_STRING_TO_ID(PS_MAGE50)
	SFX_STRING_TO_ID(PS_MAGE51)
	SFX_STRING_TO_ID(PS_MAGE52)
	SFX_STRING_TO_ID(PS_MAGE53)
	SFX_STRING_TO_ID(PS_MAGE54)
	SFX_STRING_TO_ID(PS_MAGE55)
	SFX_STRING_TO_ID(PS_MAGE56)
	SFX_STRING_TO_ID(PS_MAGE57)
	SFX_STRING_TO_ID(PS_MAGE58)
	SFX_STRING_TO_ID(PS_MAGE59)
	SFX_STRING_TO_ID(PS_MAGE60)
	SFX_STRING_TO_ID(PS_MAGE61)
	SFX_STRING_TO_ID(PS_MAGE62)
	SFX_STRING_TO_ID(PS_MAGE63)
	SFX_STRING_TO_ID(PS_MAGE64)
	SFX_STRING_TO_ID(PS_MAGE65)
	SFX_STRING_TO_ID(PS_MAGE66)
	SFX_STRING_TO_ID(PS_MAGE67)
	SFX_STRING_TO_ID(PS_MAGE68)
	SFX_STRING_TO_ID(PS_MAGE69)
	SFX_STRING_TO_ID(PS_MAGE69B)
	SFX_STRING_TO_ID(PS_MAGE70)
	SFX_STRING_TO_ID(PS_MAGE71)
	SFX_STRING_TO_ID(PS_MAGE72)
	SFX_STRING_TO_ID(PS_MAGE73)
	SFX_STRING_TO_ID(PS_MAGE74)
	SFX_STRING_TO_ID(PS_MAGE75)
	SFX_STRING_TO_ID(PS_MAGE76)
	SFX_STRING_TO_ID(PS_MAGE77)
	SFX_STRING_TO_ID(PS_MAGE78)
	SFX_STRING_TO_ID(PS_MAGE79)
	SFX_STRING_TO_ID(PS_MAGE80)
	SFX_STRING_TO_ID(PS_MAGE81)
	SFX_STRING_TO_ID(PS_MAGE82)
	SFX_STRING_TO_ID(PS_MAGE83)
	SFX_STRING_TO_ID(PS_MAGE84)
	SFX_STRING_TO_ID(PS_MAGE85)
	SFX_STRING_TO_ID(PS_MAGE86)
	SFX_STRING_TO_ID(PS_MAGE87)
	SFX_STRING_TO_ID(PS_MAGE88)
	SFX_STRING_TO_ID(PS_MAGE89)
	SFX_STRING_TO_ID(PS_MAGE90)
	SFX_STRING_TO_ID(PS_MAGE91)
	SFX_STRING_TO_ID(PS_MAGE92)
	SFX_STRING_TO_ID(PS_MAGE93)
	SFX_STRING_TO_ID(PS_MAGE94)
	SFX_STRING_TO_ID(PS_MAGE95)
	SFX_STRING_TO_ID(PS_MAGE96)
	SFX_STRING_TO_ID(PS_MAGE97)
	SFX_STRING_TO_ID(PS_MAGE98)
	SFX_STRING_TO_ID(PS_MAGE99)
	SFX_STRING_TO_ID(PS_MAGE100)
	SFX_STRING_TO_ID(PS_MAGE101)
	SFX_STRING_TO_ID(PS_MAGE102)
	SFX_STRING_TO_ID(PS_ROGUE1)
	SFX_STRING_TO_ID(PS_ROGUE2)
	SFX_STRING_TO_ID(PS_ROGUE3)
	SFX_STRING_TO_ID(PS_ROGUE4)
	SFX_STRING_TO_ID(PS_ROGUE5)
	SFX_STRING_TO_ID(PS_ROGUE6)
	SFX_STRING_TO_ID(PS_ROGUE7)
	SFX_STRING_TO_ID(PS_ROGUE8)
	SFX_STRING_TO_ID(PS_ROGUE9)
	SFX_STRING_TO_ID(PS_ROGUE10)
	SFX_STRING_TO_ID(PS_ROGUE11)
	SFX_STRING_TO_ID(PS_ROGUE12)
	SFX_STRING_TO_ID(PS_ROGUE13)
	SFX_STRING_TO_ID(PS_ROGUE14)
	SFX_STRING_TO_ID(PS_ROGUE15)
	SFX_STRING_TO_ID(PS_ROGUE16)
	SFX_STRING_TO_ID(PS_ROGUE17)
	SFX_STRING_TO_ID(PS_ROGUE18)
	SFX_STRING_TO_ID(PS_ROGUE19)
	SFX_STRING_TO_ID(PS_ROGUE20)
	SFX_STRING_TO_ID(PS_ROGUE21)
	SFX_STRING_TO_ID(PS_ROGUE22)
	SFX_STRING_TO_ID(PS_ROGUE23)
	SFX_STRING_TO_ID(PS_ROGUE24)
	SFX_STRING_TO_ID(PS_ROGUE25)
	SFX_STRING_TO_ID(PS_ROGUE26)
	SFX_STRING_TO_ID(PS_ROGUE27)
	SFX_STRING_TO_ID(PS_ROGUE28)
	SFX_STRING_TO_ID(PS_ROGUE29)
	SFX_STRING_TO_ID(PS_ROGUE30)
	SFX_STRING_TO_ID(PS_ROGUE31)
	SFX_STRING_TO_ID(PS_ROGUE32)
	SFX_STRING_TO_ID(PS_ROGUE33)
	SFX_STRING_TO_ID(PS_ROGUE34)
	SFX_STRING_TO_ID(PS_ROGUE35)
	SFX_STRING_TO_ID(PS_ROGUE36)
	SFX_STRING_TO_ID(PS_ROGUE37)
	SFX_STRING_TO_ID(PS_ROGUE38)
	SFX_STRING_TO_ID(PS_ROGUE39)
	SFX_STRING_TO_ID(PS_ROGUE40)
	SFX_STRING_TO_ID(PS_ROGUE41)
	SFX_STRING_TO_ID(PS_ROGUE42)
	SFX_STRING_TO_ID(PS_ROGUE43)
	SFX_STRING_TO_ID(PS_ROGUE44)
	SFX_STRING_TO_ID(PS_ROGUE45)
	SFX_STRING_TO_ID(PS_ROGUE46)
	SFX_STRING_TO_ID(PS_ROGUE47)
	SFX_STRING_TO_ID(PS_ROGUE48)
	SFX_STRING_TO_ID(PS_ROGUE49)
	SFX_STRING_TO_ID(PS_ROGUE50)
	SFX_STRING_TO_ID(PS_ROGUE51)
	SFX_STRING_TO_ID(PS_ROGUE52)
	SFX_STRING_TO_ID(PS_ROGUE53)
	SFX_STRING_TO_ID(PS_ROGUE54)
	SFX_STRING_TO_ID(PS_ROGUE55)
	SFX_STRING_TO_ID(PS_ROGUE56)
	SFX_STRING_TO_ID(PS_ROGUE57)
	SFX_STRING_TO_ID(PS_ROGUE58)
	SFX_STRING_TO_ID(PS_ROGUE59)
	SFX_STRING_TO_ID(PS_ROGUE60)
	SFX_STRING_TO_ID(PS_ROGUE61)
	SFX_STRING_TO_ID(PS_ROGUE62)
	SFX_STRING_TO_ID(PS_ROGUE63)
	SFX_STRING_TO_ID(PS_ROGUE64)
	SFX_STRING_TO_ID(PS_ROGUE65)
	SFX_STRING_TO_ID(PS_ROGUE66)
	SFX_STRING_TO_ID(PS_ROGUE67)
	SFX_STRING_TO_ID(PS_ROGUE68)
	SFX_STRING_TO_ID(PS_ROGUE69)
	SFX_STRING_TO_ID(PS_ROGUE69B)
	SFX_STRING_TO_ID(PS_ROGUE70)
	SFX_STRING_TO_ID(PS_ROGUE71)
	SFX_STRING_TO_ID(PS_ROGUE72)
	SFX_STRING_TO_ID(PS_ROGUE73)
	SFX_STRING_TO_ID(PS_ROGUE74)
	SFX_STRING_TO_ID(PS_ROGUE75)
	SFX_STRING_TO_ID(PS_ROGUE76)
	SFX_STRING_TO_ID(PS_ROGUE77)
	SFX_STRING_TO_ID(PS_ROGUE78)
	SFX_STRING_TO_ID(PS_ROGUE79)
	SFX_STRING_TO_ID(PS_ROGUE80)
	SFX_STRING_TO_ID(PS_ROGUE81)
	SFX_STRING_TO_ID(PS_ROGUE82)
	SFX_STRING_TO_ID(PS_ROGUE83)
	SFX_STRING_TO_ID(PS_ROGUE84)
	SFX_STRING_TO_ID(PS_ROGUE85)
	SFX_STRING_TO_ID(PS_ROGUE86)
	SFX_STRING_TO_ID(PS_ROGUE87)
	SFX_STRING_TO_ID(PS_ROGUE88)
	SFX_STRING_TO_ID(PS_ROGUE89)
	SFX_STRING_TO_ID(PS_ROGUE90)
	SFX_STRING_TO_ID(PS_ROGUE91)
	SFX_STRING_TO_ID(PS_ROGUE92)
	SFX_STRING_TO_ID(PS_ROGUE93)
	SFX_STRING_TO_ID(PS_ROGUE94)
	SFX_STRING_TO_ID(PS_ROGUE95)
	SFX_STRING_TO_ID(PS_ROGUE96)
	SFX_STRING_TO_ID(PS_ROGUE97)
	SFX_STRING_TO_ID(PS_ROGUE98)
	SFX_STRING_TO_ID(PS_ROGUE99)
	SFX_STRING_TO_ID(PS_ROGUE100)
	SFX_STRING_TO_ID(PS_ROGUE101)
	SFX_STRING_TO_ID(PS_ROGUE102)
	SFX_STRING_TO_ID(PS_WARR1)
	SFX_STRING_TO_ID(PS_WARR2)
	SFX_STRING_TO_ID(PS_WARR3)
	SFX_STRING_TO_ID(PS_WARR4)
	SFX_STRING_TO_ID(PS_WARR5)
	SFX_STRING_TO_ID(PS_WARR6)
	SFX_STRING_TO_ID(PS_WARR7)
	SFX_STRING_TO_ID(PS_WARR8)
	SFX_STRING_TO_ID(PS_WARR9)
	SFX_STRING_TO_ID(PS_WARR10)
	SFX_STRING_TO_ID(PS_WARR11)
	SFX_STRING_TO_ID(PS_WARR12)
	SFX_STRING_TO_ID(PS_WARR13)
	SFX_STRING_TO_ID(PS_WARR14)
	SFX_STRING_TO_ID(PS_WARR14B)
	SFX_STRING_TO_ID(PS_WARR14C)
	SFX_STRING_TO_ID(PS_WARR15)
	SFX_STRING_TO_ID(PS_WARR15B)
	SFX_STRING_TO_ID(PS_WARR15C)
	SFX_STRING_TO_ID(PS_WARR16)
	SFX_STRING_TO_ID(PS_WARR16B)
	SFX_STRING_TO_ID(PS_WARR16C)
	SFX_STRING_TO_ID(PS_WARR17)
	SFX_STRING_TO_ID(PS_WARR18)
	SFX_STRING_TO_ID(PS_WARR19)
	SFX_STRING_TO_ID(PS_WARR20)
	SFX_STRING_TO_ID(PS_WARR21)
	SFX_STRING_TO_ID(PS_WARR22)
	SFX_STRING_TO_ID(PS_WARR23)
	SFX_STRING_TO_ID(PS_WARR24)
	SFX_STRING_TO_ID(PS_WARR25)
	SFX_STRING_TO_ID(PS_WARR26)
	SFX_STRING_TO_ID(PS_WARR27)
	SFX_STRING_TO_ID(PS_WARR28)
	SFX_STRING_TO_ID(PS_WARR29)
	SFX_STRING_TO_ID(PS_WARR30)
	SFX_STRING_TO_ID(PS_WARR31)
	SFX_STRING_TO_ID(PS_WARR32)
	SFX_STRING_TO_ID(PS_WARR33)
	SFX_STRING_TO_ID(PS_WARR34)
	SFX_STRING_TO_ID(PS_WARR35)
	SFX_STRING_TO_ID(PS_WARR36)
	SFX_STRING_TO_ID(PS_WARR37)
	SFX_STRING_TO_ID(PS_WARR38)
	SFX_STRING_TO_ID(PS_WARR39)
	SFX_STRING_TO_ID(PS_WARR40)
	SFX_STRING_TO_ID(PS_WARR41)
	SFX_STRING_TO_ID(PS_WARR42)
	SFX_STRING_TO_ID(PS_WARR43)
	SFX_STRING_TO_ID(PS_WARR44)
	SFX_STRING_TO_ID(PS_WARR45)
	SFX_STRING_TO_ID(PS_WARR46)
	SFX_STRING_TO_ID(PS_WARR47)
	SFX_STRING_TO_ID(PS_WARR48)
	SFX_STRING_TO_ID(PS_WARR49)
	SFX_STRING_TO_ID(PS_WARR50)
	SFX_STRING_TO_ID(PS_WARR51)
	SFX_STRING_TO_ID(PS_WARR52)
	SFX_STRING_TO_ID(PS_WARR53)
	SFX_STRING_TO_ID(PS_WARR54)
	SFX_STRING_TO_ID(PS_WARR55)
	SFX_STRING_TO_ID(PS_WARR56)
	SFX_STRING_TO_ID(PS_WARR57)
	SFX_STRING_TO_ID(PS_WARR58)
	SFX_STRING_TO_ID(PS_WARR59)
	SFX_STRING_TO_ID(PS_WARR60)
	SFX_STRING_TO_ID(PS_WARR61)
	SFX_STRING_TO_ID(PS_WARR62)
	SFX_STRING_TO_ID(PS_WARR63)
	SFX_STRING_TO_ID(PS_WARR64)
	SFX_STRING_TO_ID(PS_WARR65)
	SFX_STRING_TO_ID(PS_WARR66)
	SFX_STRING_TO_ID(PS_WARR67)
	SFX_STRING_TO_ID(PS_WARR68)
	SFX_STRING_TO_ID(PS_WARR69)
	SFX_STRING_TO_ID(PS_WARR69B)
	SFX_STRING_TO_ID(PS_WARR70)
	SFX_STRING_TO_ID(PS_WARR71)
	SFX_STRING_TO_ID(PS_WARR72)
	SFX_STRING_TO_ID(PS_WARR73)
	SFX_STRING_TO_ID(PS_WARR74)
	SFX_STRING_TO_ID(PS_WARR75)
	SFX_STRING_TO_ID(PS_WARR76)
	SFX_STRING_TO_ID(PS_WARR77)
	SFX_STRING_TO_ID(PS_WARR78)
	SFX_STRING_TO_ID(PS_WARR79)
	SFX_STRING_TO_ID(PS_WARR80)
	SFX_STRING_TO_ID(PS_WARR81)
	SFX_STRING_TO_ID(PS_WARR82)
	SFX_STRING_TO_ID(PS_WARR83)
	SFX_STRING_TO_ID(PS_WARR84)
	SFX_STRING_TO_ID(PS_WARR85)
	SFX_STRING_TO_ID(PS_WARR86)
	SFX_STRING_TO_ID(PS_WARR87)
	SFX_STRING_TO_ID(PS_WARR88)
	SFX_STRING_TO_ID(PS_WARR89)
	SFX_STRING_TO_ID(PS_WARR90)
	SFX_STRING_TO_ID(PS_WARR91)
	SFX_STRING_TO_ID(PS_WARR92)
	SFX_STRING_TO_ID(PS_WARR93)
	SFX_STRING_TO_ID(PS_WARR94)
	SFX_STRING_TO_ID(PS_WARR95)
	SFX_STRING_TO_ID(PS_WARR95B)
	SFX_STRING_TO_ID(PS_WARR95C)
	SFX_STRING_TO_ID(PS_WARR95D)
	SFX_STRING_TO_ID(PS_WARR95E)
	SFX_STRING_TO_ID(PS_WARR95F)
	SFX_STRING_TO_ID(PS_WARR96B)
	SFX_STRING_TO_ID(PS_WARR97)
	SFX_STRING_TO_ID(PS_WARR98)
	SFX_STRING_TO_ID(PS_WARR99)
	SFX_STRING_TO_ID(PS_WARR100)
	SFX_STRING_TO_ID(PS_WARR101)
	SFX_STRING_TO_ID(PS_WARR102)
	SFX_STRING_TO_ID(PS_MONK1)
	SFX_STRING_TO_ID(PS_MONK2)
	SFX_STRING_TO_ID(PS_MONK3)
	SFX_STRING_TO_ID(PS_MONK4)
	SFX_STRING_TO_ID(PS_MONK5)
	SFX_STRING_TO_ID(PS_MONK6)
	SFX_STRING_TO_ID(PS_MONK7)
	SFX_STRING_TO_ID(PS_MONK8)
	SFX_STRING_TO_ID(PS_MONK9)
	SFX_STRING_TO_ID(PS_MONK10)
	SFX_STRING_TO_ID(PS_MONK11)
	SFX_STRING_TO_ID(PS_MONK12)
	SFX_STRING_TO_ID(PS_MONK13)
	SFX_STRING_TO_ID(PS_MONK14)
	SFX_STRING_TO_ID(PS_MONK15)
	SFX_STRING_TO_ID(PS_MONK16)
	SFX_STRING_TO_ID(PS_MONK17)
	SFX_STRING_TO_ID(PS_MONK18)
	SFX_STRING_TO_ID(PS_MONK19)
	SFX_STRING_TO_ID(PS_MONK20)
	SFX_STRING_TO_ID(PS_MONK21)
	SFX_STRING_TO_ID(PS_MONK22)
	SFX_STRING_TO_ID(PS_MONK23)
	SFX_STRING_TO_ID(PS_MONK24)
	SFX_STRING_TO_ID(PS_MONK25)
	SFX_STRING_TO_ID(PS_MONK26)
	SFX_STRING_TO_ID(PS_MONK27)
	SFX_STRING_TO_ID(PS_MONK28)
	SFX_STRING_TO_ID(PS_MONK29)
	SFX_STRING_TO_ID(PS_MONK30)
	SFX_STRING_TO_ID(PS_MONK31)
	SFX_STRING_TO_ID(PS_MONK32)
	SFX_STRING_TO_ID(PS_MONK33)
	SFX_STRING_TO_ID(PS_MONK34)
	SFX_STRING_TO_ID(PS_MONK35)
	SFX_STRING_TO_ID(PS_MONK36)
	SFX_STRING_TO_ID(PS_MONK37)
	SFX_STRING_TO_ID(PS_MONK38)
	SFX_STRING_TO_ID(PS_MONK39)
	SFX_STRING_TO_ID(PS_MONK40)
	SFX_STRING_TO_ID(PS_MONK41)
	SFX_STRING_TO_ID(PS_MONK42)
	SFX_STRING_TO_ID(PS_MONK43)
	SFX_STRING_TO_ID(PS_MONK44)
	SFX_STRING_TO_ID(PS_MONK45)
	SFX_STRING_TO_ID(PS_MONK46)
	SFX_STRING_TO_ID(PS_MONK47)
	SFX_STRING_TO_ID(PS_MONK48)
	SFX_STRING_TO_ID(PS_MONK49)
	SFX_STRING_TO_ID(PS_MONK50)
	SFX_STRING_TO_ID(PS_MONK51)
	SFX_STRING_TO_ID(PS_MONK52)
	SFX_STRING_TO_ID(PS_MONK53)
	SFX_STRING_TO_ID(PS_MONK54)
	SFX_STRING_TO_ID(PS_MONK55)
	SFX_STRING_TO_ID(PS_MONK56)
	SFX_STRING_TO_ID(PS_MONK57)
	SFX_STRING_TO_ID(PS_MONK58)
	SFX_STRING_TO_ID(PS_MONK59)
	SFX_STRING_TO_ID(PS_MONK60)
	SFX_STRING_TO_ID(PS_MONK61)
	SFX_STRING_TO_ID(PS_MONK62)
	SFX_STRING_TO_ID(PS_MONK63)
	SFX_STRING_TO_ID(PS_MONK64)
	SFX_STRING_TO_ID(PS_MONK65)
	SFX_STRING_TO_ID(PS_MONK66)
	SFX_STRING_TO_ID(PS_MONK67)
	SFX_STRING_TO_ID(PS_MONK68)
	SFX_STRING_TO_ID(PS_MONK69)
	SFX_STRING_TO_ID(PS_MONK69B)
	SFX_STRING_TO_ID(PS_MONK70)
	SFX_STRING_TO_ID(PS_MONK71)
	SFX_STRING_TO_ID(PS_MONK72)
	SFX_STRING_TO_ID(PS_MONK73)
	SFX_STRING_TO_ID(PS_MONK74)
	SFX_STRING_TO_ID(PS_MONK75)
	SFX_STRING_TO_ID(PS_MONK76)
	SFX_STRING_TO_ID(PS_MONK77)
	SFX_STRING_TO_ID(PS_MONK78)
	SFX_STRING_TO_ID(PS_MONK79)
	SFX_STRING_TO_ID(PS_MONK80)
	SFX_STRING_TO_ID(PS_MONK81)
	SFX_STRING_TO_ID(PS_MONK82)
	SFX_STRING_TO_ID(PS_MONK83)
	SFX_STRING_TO_ID(PS_MONK84)
	SFX_STRING_TO_ID(PS_MONK85)
	SFX_STRING_TO_ID(PS_MONK86)
	SFX_STRING_TO_ID(PS_MONK87)
	SFX_STRING_TO_ID(PS_MONK88)
	SFX_STRING_TO_ID(PS_MONK89)
	SFX_STRING_TO_ID(PS_MONK90)
	SFX_STRING_TO_ID(PS_MONK91)
	SFX_STRING_TO_ID(PS_MONK92)
	SFX_STRING_TO_ID(PS_MONK93)
	SFX_STRING_TO_ID(PS_MONK94)
	SFX_STRING_TO_ID(PS_MONK95)
	SFX_STRING_TO_ID(PS_MONK96)
	SFX_STRING_TO_ID(PS_MONK97)
	SFX_STRING_TO_ID(PS_MONK98)
	SFX_STRING_TO_ID(PS_MONK99)
	SFX_STRING_TO_ID(PS_MONK100)
	SFX_STRING_TO_ID(PS_MONK101)
	SFX_STRING_TO_ID(PS_MONK102)
	SFX_STRING_TO_ID(PS_NAR1)
	SFX_STRING_TO_ID(PS_NAR2)
	SFX_STRING_TO_ID(PS_NAR3)
	SFX_STRING_TO_ID(PS_NAR4)
	SFX_STRING_TO_ID(PS_NAR5)
	SFX_STRING_TO_ID(PS_NAR6)
	SFX_STRING_TO_ID(PS_NAR7)
	SFX_STRING_TO_ID(PS_NAR8)
	SFX_STRING_TO_ID(PS_NAR9)
	SFX_STRING_TO_ID(PS_DIABLVLINT)
	SFX_STRING_TO_ID(USFX_CLEAVER)
	SFX_STRING_TO_ID(USFX_GARBUD1)
	SFX_STRING_TO_ID(USFX_GARBUD2)
	SFX_STRING_TO_ID(USFX_GARBUD3)
	SFX_STRING_TO_ID(USFX_GARBUD4)
	SFX_STRING_TO_ID(USFX_IZUAL1)
	SFX_STRING_TO_ID(USFX_LACH1)
	SFX_STRING_TO_ID(USFX_LACH2)
	SFX_STRING_TO_ID(USFX_LACH3)
	SFX_STRING_TO_ID(USFX_LAZ1)
	SFX_STRING_TO_ID(USFX_LAZ2)
	SFX_STRING_TO_ID(USFX_SKING1)
	SFX_STRING_TO_ID(USFX_SNOT1)
	SFX_STRING_TO_ID(USFX_SNOT2)
	SFX_STRING_TO_ID(USFX_SNOT3)
	SFX_STRING_TO_ID(USFX_WARLRD1)
	SFX_STRING_TO_ID(USFX_WLOCK1)
	SFX_STRING_TO_ID(USFX_ZHAR1)
	SFX_STRING_TO_ID(USFX_ZHAR2)
	SFX_STRING_TO_ID(USFX_DIABLOD)
	SFX_STRING_TO_ID(TSFX_FARMER1)
	SFX_STRING_TO_ID(TSFX_FARMER2)
	SFX_STRING_TO_ID(TSFX_FARMER2A)
	SFX_STRING_TO_ID(TSFX_FARMER3)
	SFX_STRING_TO_ID(TSFX_FARMER4)
	SFX_STRING_TO_ID(TSFX_FARMER5)
	SFX_STRING_TO_ID(TSFX_FARMER6)
	SFX_STRING_TO_ID(TSFX_FARMER7)
	SFX_STRING_TO_ID(TSFX_FARMER8)
	SFX_STRING_TO_ID(TSFX_FARMER9)
	SFX_STRING_TO_ID(TSFX_TEDDYBR1)
	SFX_STRING_TO_ID(TSFX_TEDDYBR2)
	SFX_STRING_TO_ID(TSFX_TEDDYBR3)
	SFX_STRING_TO_ID(TSFX_TEDDYBR4)
	SFX_STRING_TO_ID(USFX_DEFILER1)
	SFX_STRING_TO_ID(USFX_DEFILER2)
	SFX_STRING_TO_ID(USFX_DEFILER3)
	SFX_STRING_TO_ID(USFX_DEFILER4)
	SFX_STRING_TO_ID(USFX_DEFILER8)
	SFX_STRING_TO_ID(USFX_DEFILER6)
	SFX_STRING_TO_ID(USFX_DEFILER7)
	SFX_STRING_TO_ID(USFX_NAKRUL1)
	SFX_STRING_TO_ID(USFX_NAKRUL2)
	SFX_STRING_TO_ID(USFX_NAKRUL3)
	SFX_STRING_TO_ID(USFX_NAKRUL4)
	SFX_STRING_TO_ID(USFX_NAKRUL5)
	SFX_STRING_TO_ID(USFX_NAKRUL6)
	SFX_STRING_TO_ID(PS_NARATR3)
	SFX_STRING_TO_ID(TSFX_COWSUT1)
	SFX_STRING_TO_ID(TSFX_COWSUT2)
	SFX_STRING_TO_ID(TSFX_COWSUT3)
	SFX_STRING_TO_ID(TSFX_COWSUT4)
	SFX_STRING_TO_ID(TSFX_COWSUT4A)
	SFX_STRING_TO_ID(TSFX_COWSUT5)
	SFX_STRING_TO_ID(TSFX_COWSUT6)
	SFX_STRING_TO_ID(TSFX_COWSUT7)
	SFX_STRING_TO_ID(TSFX_COWSUT8)
	SFX_STRING_TO_ID(TSFX_COWSUT9)
	SFX_STRING_TO_ID(TSFX_COWSUT10)
	SFX_STRING_TO_ID(TSFX_COWSUT11)
	SFX_STRING_TO_ID(TSFX_COWSUT12)
	SFX_STRING_TO_ID(USFX_SKLJRN1)
	SFX_STRING_TO_ID(PS_NARATR6)
	SFX_STRING_TO_ID(PS_NARATR7)
	SFX_STRING_TO_ID(PS_NARATR8)
	SFX_STRING_TO_ID(PS_NARATR5)
	SFX_STRING_TO_ID(PS_NARATR9)
	SFX_STRING_TO_ID(PS_NARATR4)
	SFX_STRING_TO_ID(TSFX_TRADER1)
	SFX_STRING_TO_ID(IS_CROPEN)
	SFX_STRING_TO_ID(IS_CRCLOS)

	devilution::app_fatal("Invalid sfx tpye! %s", str.c_str());
	return IS_CRCLOS;
}

TSFX *sgSFX = nullptr;
int numSfx = 0;

/*
sfx_STREAM   = 1 << 0,
	sfx_MISC     = 1 << 1,
	sfx_UI       = 1 << 2,
	sfx_MONK     = 1 << 3,
	sfx_ROGUE    = 1 << 4,
	sfx_WARRIOR  = 1 << 5,
	sfx_SORCERER = 1 << 6,
	sfx_HELLFIRE = 1 << 7,
*/

#define SFX_TEST_FLAG(x, v) \
	if (token[d] == #x) {        \
		v |= x;              \
	}

void InitSfxDataTable(void)
{
	numSfx = sfxTable->NumRows();

	sgSFX = new TSFX[numSfx];

	for (int i = 0; i < numSfx; i++) {
		sgSFX[i].pSnd = nullptr;
		sgSFX[i].pszName = sfxTable->GetValue("pszName", i);

		std::vector<std::string> token = split(sfxTable->GetValue("bFlags", i), '|');
		sgSFX[i].bFlags = 0;

		for (int d = 0; d < token.size(); d++) {
			SFX_TEST_FLAG(sfx_STREAM, sgSFX[i].bFlags)
			SFX_TEST_FLAG(sfx_MISC, sgSFX[i].bFlags)
			SFX_TEST_FLAG(sfx_UI, sgSFX[i].bFlags)
			SFX_TEST_FLAG(sfx_MONK, sgSFX[i].bFlags)
			SFX_TEST_FLAG(sfx_ROGUE, sgSFX[i].bFlags)
			SFX_TEST_FLAG(sfx_WARRIOR, sgSFX[i].bFlags)
			SFX_TEST_FLAG(sfx_SORCERER, sgSFX[i].bFlags)
			SFX_TEST_FLAG(sfx_HELLFIRE, sgSFX[i].bFlags)
		}
	}
}

#ifndef DISABLE_STREAMING_SOUNDS
constexpr bool AllowStreaming = true;
#else
constexpr bool AllowStreaming = false;
#endif

/** Specifies the sound file and the playback state of the current sound effect. */
TSFX *sgpStreamSFX = nullptr;

/**
 * Monster sound type prefix
 * a: Attack
 * h: Hit
 * d: Death
 * s: Special
 */
const char MonstSndChar[] = { 'a', 'h', 'd', 's' };

/* data */
/** List of all sounds, except monsters and music */

void StreamPlay(TSFX *pSFX, int lVolume, int lPan)
{
	assert(pSFX);
	assert(pSFX->bFlags & sfx_STREAM);
	stream_stop();

	if (lVolume >= VOLUME_MIN) {
		if (lVolume > VOLUME_MAX)
			lVolume = VOLUME_MAX;
		if (pSFX->pSnd == nullptr)
			pSFX->pSnd = sound_file_load(pSFX->pszName, AllowStreaming);
		pSFX->pSnd->Play(lVolume, sound_get_or_set_sound_volume(1), lPan);
		sgpStreamSFX = pSFX;
	}
}

void StreamUpdate()
{
	if (sgpStreamSFX != nullptr && !sgpStreamSFX->pSnd->isPlaying()) {
		stream_stop();
	}
}

void PlaySfxPriv(TSFX *pSFX, bool loc, Point position)
{
	if (Players[MyPlayerId].pLvlLoad != 0 && gbIsMultiplayer) {
		return;
	}
	if (!gbSndInited || !gbSoundOn || gbBufferMsgs != 0) {
		return;
	}

	if ((pSFX->bFlags & (sfx_STREAM | sfx_MISC)) == 0 && pSFX->pSnd != nullptr && pSFX->pSnd->isPlaying()) {
		return;
	}

	int lVolume = 0;
	int lPan = 0;
	if (loc && !CalculateSoundPosition(position, &lVolume, &lPan)) {
		return;
	}

	if ((pSFX->bFlags & sfx_STREAM) != 0) {
		StreamPlay(pSFX, lVolume, lPan);
		return;
	}

	if (pSFX->pSnd == nullptr)
		pSFX->pSnd = sound_file_load(pSFX->pszName);

	if (pSFX->pSnd != nullptr)
		snd_play_snd(pSFX->pSnd.get(), lVolume, lPan);
}

_sfx_id RndSFX(_sfx_id psfx)
{
	int nRand;

	switch (psfx) {
	case PS_WARR69:
	case PS_MAGE69:
	case PS_ROGUE69:
	case PS_MONK69:
	case PS_SWING:
	case LS_ACID:
	case IS_FMAG:
	case IS_MAGIC:
	case IS_BHIT:
		nRand = 2;
		break;
	case PS_WARR14:
	case PS_WARR15:
	case PS_WARR16:
	case PS_WARR2:
	case PS_ROGUE14:
	case PS_MAGE14:
	case PS_MONK14:
		nRand = 3;
		break;
	default:
		return psfx;
	}

	return static_cast<_sfx_id>(psfx + GenerateRnd(nRand));
}

void PrivSoundInit(BYTE bLoadMask)
{
	if (!gbSndInited) {
		return;
	}

	//for (auto &sfx : sgSFX) {
	for (int i = 0; i < numSfx; i++) {
		auto &sfx = sgSFX[i];
		if (sfx.pSnd != nullptr) {
			continue;
		}

		if ((sfx.bFlags & sfx_STREAM) != 0) {
			continue;
		}

		if ((sfx.bFlags & bLoadMask) == 0) {
			continue;
		}

		if (!gbIsHellfire && (sfx.bFlags & sfx_HELLFIRE) != 0) {
			continue;
		}

		sfx.pSnd = sound_file_load(sfx.pszName);
	}
}


bool effect_is_playing(int nSFX)
{
	TSFX *sfx = &sgSFX[nSFX];
	if (sfx->pSnd != nullptr)
		return sfx->pSnd->isPlaying();

	if ((sfx->bFlags & sfx_STREAM) != 0)
		return sfx == sgpStreamSFX;

	return false;
}

void stream_stop()
{
	if (sgpStreamSFX != nullptr) {
		sgpStreamSFX->pSnd = nullptr;
		sgpStreamSFX = nullptr;
	}
}

void InitMonsterSND(int monst)
{
	if (!gbSndInited) {
		return;
	}

	const int mtype = LevelMonsterTypes[monst].mtype;
	for (int i = 0; i < 4; i++) {
		if (MonstSndChar[i] != 's' || MonstersData[mtype].snd_special) {
			for (int j = 0; j < 2; j++) {
				char path[MAX_PATH];
				sprintf(path, MonstersData[mtype].sndfile, MonstSndChar[i], j + 1);
				LevelMonsterTypes[monst].Snds[i][j] = sound_file_load(path);
			}
		}
	}
}

void FreeMonsterSnd()
{
	for (int i = 0; i < LevelMonsterTypeCount; i++) {
		for (auto &variants : LevelMonsterTypes[i].Snds) {
			for (auto &snd : variants) {
				snd = nullptr;
			}
		}
	}
}

bool CalculateSoundPosition(Point soundPosition, int *plVolume, int *plPan)
{
	const auto &playerPosition = Players[MyPlayerId].position.tile;
	const auto delta = soundPosition - playerPosition;

	int pan = (delta.deltaX - delta.deltaY) * 256;
	*plPan = clamp(pan, PAN_MIN, PAN_MAX);

	int volume = playerPosition.ApproxDistance(soundPosition);
	volume *= -64;

	if (volume <= ATTENUATION_MIN)
		return false;

	*plVolume = volume;

	return true;
}

void PlaySFX(_sfx_id psfx)
{
	psfx = RndSFX(psfx);

	PlaySfxPriv(&sgSFX[psfx], false, { 0, 0 });
}

void PlaySfxLoc(_sfx_id psfx, Point position, bool randomizeByCategory)
{
	if (randomizeByCategory) {
		psfx = RndSFX(psfx);
	}

	if (psfx >= 0 && psfx <= 3) {
		TSnd *pSnd = sgSFX[psfx].pSnd.get();
		if (pSnd != nullptr)
			pSnd->start_tc = 0;
	}

	PlaySfxPriv(&sgSFX[psfx], true, position);
}

void sound_stop()
{
	ClearDuplicateSounds();
	for (int i = 0; i < numSfx; i++) {
		auto &sfx = sgSFX[i];
		if (sfx.pSnd != nullptr) {
			sfx.pSnd->Stop();
		}
	}
}

void sound_update()
{
	if (!gbSndInited) {
		return;
	}

	StreamUpdate();
}

void effects_cleanup_sfx()
{
	sound_stop();

	for (int i = 0; i < numSfx; i++) {
		auto &sfx = sgSFX[i];
		sfx.pSnd = nullptr;
	}
}

void sound_init()
{
	uint8_t mask = sfx_MISC;
	if (gbIsMultiplayer) {
		mask |= sfx_WARRIOR;
		if (!gbIsSpawn)
			mask |= (sfx_ROGUE | sfx_SORCERER);
		if (gbIsHellfire)
			mask |= sfx_MONK;
	} else {
		switch (Players[MyPlayerId]._pClass) {
		case HeroClass::Warrior:
		case HeroClass::Barbarian:
			mask |= sfx_WARRIOR;
			break;
		case HeroClass::Rogue:
		case HeroClass::Bard:
			mask |= sfx_ROGUE;
			break;
		case HeroClass::Sorcerer:
			mask |= sfx_SORCERER;
			break;
		case HeroClass::Monk:
			mask |= sfx_MONK;
			break;
		default:
			app_fatal("effects:1");
		}
	}

	PrivSoundInit(mask);
}

void ui_sound_init()
{
	PrivSoundInit(sfx_UI);
}

void effects_play_sound(const char *sndFile)
{
	if (!gbSndInited || !gbSoundOn) {
		return;
	}

	for (int i = 0; i < numSfx; i++) {
		auto &sfx = sgSFX[i];
		if (strcasecmp(sfx.pszName, sndFile) == 0 && sfx.pSnd != nullptr) {
			if (!sfx.pSnd->isPlaying())
				snd_play_snd(sfx.pSnd.get(), 0, 0);

			return;
		}
	}
}

int GetSFXLength(int nSFX)
{
	if (sgSFX[nSFX].pSnd == nullptr)
		sgSFX[nSFX].pSnd = sound_file_load(sgSFX[nSFX].pszName,
		    /*stream=*/AllowStreaming && (sgSFX[nSFX].bFlags & sfx_STREAM) != 0);
	return sgSFX[nSFX].pSnd->GetLength();
}

} // namespace devilution
